{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('tbody');\nconst gameScore = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst cellsInRow = 4;\nlet scoreCount = 0;\nlet field;\n\nfunction startGame() {\n  field = Array.from({ length: cellsInRow }, () => Array(cellsInRow).fill(0));\n  scoreCount = 0;\n  gameScore.innerText = scoreCount;\n  placeTile();\n  placeTile();\n}\n\nfunction placeTile() {\n  if (!hasEmptyCells()) {\n    return;\n  }\n\n  let randomRow, randomColumn;\n\n  do {\n    randomRow = Math.floor(Math.random() * cellsInRow);\n    randomColumn = Math.floor(Math.random() * cellsInRow);\n  } while (field[randomRow][randomColumn] !== 0);\n  field[randomRow][randomColumn] = Math.random() < 0.8 ? 2 : 4;\n  setCells();\n}\n\nfunction hasEmptyCells() {\n  return field.some(row => row.includes(0));\n}\n\nfunction removeEmptyCells(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction setCells() {\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      const currentCell = gameField.rows[i].cells[j];\n      const num = field[i][j];\n\n      currentCell.innerText = '';\n      currentCell.classList.value = '';\n      currentCell.classList.add('field-cell');\n\n      if (num > 0) {\n        currentCell.innerText = num;\n        currentCell.classList.add(`field-cell--${num}`);\n      }\n\n      if (num === 2048) {\n        messageWin.classList.remove('hidden');\n        button.classList.replace('restart', 'start');\n      }\n    }\n  }\n\n  if (gameIsLost()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction gameIsLost() {\n  if (hasEmptyCells()) {\n    return false;\n  }\n\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (field[i][j] === field[i][j + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let i = 0; i < cellsInRow - 1; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (field[i][j] === field[i + 1][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction slide(row) {\n  const emptyCell = hasEmptyCells();\n  let merge = false;\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      merge = true;\n      break;\n    }\n  }\n\n  if (!emptyCell && !merge) {\n    return row;\n  }\n\n  let newRow = removeEmptyCells(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n      gameScore.innerText = scoreCount;\n    }\n  }\n  newRow = removeEmptyCells(newRow);\n\n  while (newRow.length < cellsInRow) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let row = field[i];\n\n    row = slide(row);\n    field[i] = row;\n  }\n}\n\nfunction slideRight() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let row = field[i].reverse();\n\n    row = slide(row).reverse();\n    field[i] = row;\n  }\n}\n\nfunction slideUp() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let col = [field[0][i], field[1][i], field[2][i], field[3][i]];\n\n    col = slide(col);\n\n    for (let j = 0; j < cellsInRow; j++) {\n      field[j][i] = col[j];\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let col = [field[0][i], field[1][i], field[2][i], field[3][i]].reverse();\n\n    col = slide(col).reverse();\n\n    for (let j = 0; j < cellsInRow; j++) {\n      field[j][i] = col[j];\n    }\n  }\n}\n\nbutton.addEventListener('click', () => {\n  button.classList.replace('start', 'restart');\n  button.innerText = 'Restart';\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  startGame();\n});\n\ndocument.addEventListener('keyup', (e) => {\n  e.preventDefault();\n\n  const previousField = JSON.stringify(field);\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n\n      if (JSON.stringify(field) !== previousField) {\n        placeTile();\n      }\n      break;\n    case 'ArrowRight':\n      slideRight();\n\n      if (JSON.stringify(field) !== previousField) {\n        placeTile();\n      }\n      break;\n    case 'ArrowUp':\n      slideUp();\n\n      if (JSON.stringify(field) !== previousField) {\n        placeTile();\n      }\n      break;\n    case 'ArrowDown':\n      slideDown();\n\n      if (JSON.stringify(field) !== previousField) {\n        placeTile();\n      }\n      break;\n\n    default:\n      break;\n  }\n  setCells();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}